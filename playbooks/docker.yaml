- hosts: all
  become: true
  vars:
    files_dir: ../files/docker
    username: "{{ lookup('env', 'USERNAME') }}"
    switch_version: 1.0.5
    switch_checksum: sha256:b40e078fb216ddac87fcf40cbb09b60286e6a21a51d5ad7f777c6d4dbea4eab4

  tasks:
    - name: Install apt-transport-https
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: latest

    - name: Check if "Docker" keyring is already installed
      ansible.builtin.stat:
        path: "/etc/apt/keyrings/docker.gpg"
      register: docker_keyring

    - name: Install "Docker" keyring
      block:
        - name: Download "Docker" signing key
          ansible.builtin.get_url:
            url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
            dest: "/tmp/docker.gpg"
        - name: Add "Docker" signing key
          ansible.builtin.shell:
            cmd: "cat /tmp/docker.gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg"
        - name: Remove temporary files from "Docker" signing key
          ansible.builtin.file:
            path: "/tmp/docker.gpg"
            state: absent
      when: docker_keyring is defined and not docker_keyring.stat.exists

    - name: Check if "Docker" repository is already installed
      ansible.builtin.stat:
        path: "/etc/apt/sources.list.d/docker.list"
      register: docker_repository

    - name: Install "Docker" repository
      block:
        - name: Get DEB architecture
          shell: dpkg --print-architecture
          register: deb_architecture

        - name: Add "Docker" repository into sources list
          ansible.builtin.apt_repository:
            repo: "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
            filename: docker
            state: present
      when: docker_repository is defined and not docker_repository.stat.exists

    - name: Install "Docker" packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Change network range of "Docker"
      ansible.builtin.copy:
        src: "{{ files_dir }}/daemon.json"
        dest: "/etc/docker/daemon.json"
        mode: 0644
        force: false

    - name: Enable "Docker" daemon
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add "{{ username }}" to "Docker" group
      ansible.builtin.user:
        name: "{{ username }}"
        groups: docker
        append: true

    - name: Install "Compose-Switch" package
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose-switch/releases/download/v{{ switch_version }}/docker-compose-linux-amd64"
        dest: /usr/local/bin/docker-compose
        checksum: "{{ switch_checksum }}"
        mode: 0755
