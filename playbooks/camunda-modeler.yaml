- hosts: all
  become: true
  vars:
    camunda_version: "5.12.0"
    camunda_sha256: sha256:395904c69404f8d76b3a35af8477746970ec8c010b3948f704bf5faf41ff7fe0

  tasks:
    - name: Check if "Camunda Modeler {{ camunda_version }}" is already installed
      ansible.builtin.stat:
        path: "/opt/Camunda/Modeler-{{ camunda_version }}"
      register: opt_camunda

    - name: Create "Camunda Modeler {{ camunda_version }}" installation directory
      ansible.builtin.file:
        path: "/opt/Camunda/Modeler-{{ camunda_version }}"
        state: directory
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Download "Camunda Modeler {{ camunda_version }}" package
      ansible.builtin.get_url:
        url: "https://downloads.camunda.cloud/release/camunda-modeler/{{ camunda_version }}/camunda-modeler-{{ camunda_version }}-linux-x64.tar.gz"
        dest: "/tmp/camunda-modeler-{{ camunda_version }}-linux-x64.tar.gz"
        mode: 0644
        checksum: "{{ camunda_sha256 }}"
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Unpack "Camunda Modeler {{ camunda_version }}" package
      ansible.builtin.unarchive:
        src: "/tmp/camunda-modeler-{{ camunda_version }}-linux-x64.tar.gz"
        dest: "/tmp"
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Copy "Camunda Modeler {{ camunda_version }}" to installation directory
      ansible.builtin.copy:
        src: "/tmp/camunda-modeler-{{ camunda_version }}-linux-x64/"
        dest: "/opt/Camunda/Modeler-{{ camunda_version }}"
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Remove temporary files from "Camunda Modeler {{ camunda_version }}" installation
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - "camunda-modeler-{{ camunda_version }}-linux-x64.tar.gz"
        - "camunda-modeler-{{ camunda_version }}-linux-x64"
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Change "Camunda Modeler {{ camunda_version }}" script permissions for XDG
      ansible.builtin.file:
        path: "/opt/Camunda/Modeler-{{ camunda_version }}/support/{{ item }}"
        mode: '0755'
      loop:
        - "xdg_register.sh"
        - "xdg_unregister.sh"
      when: opt_camunda is defined and not opt_camunda.stat.exists

    - name: Register "Camunda Modeler {{ camunda_version }}" in XDG
      ansible.builtin.shell:
        cmd: "/opt/Camunda/Modeler-{{ camunda_version }}/support/xdg_register.sh"
      when: opt_camunda is defined and not opt_camunda.stat.exists
